@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix : <http://www.semanticweb.org/group08/ontology#> .
@prefix res: <http://group08.linkeddata.es/resource/> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .


### 1. Traffic
# Source: 2025-08-Agost-ITINERARIS-ITINERARIS-updated.csv

<#TrafficObservationMap> a rr:TriplesMap;
    # 1. Fuente de datos
    rml:logicalSource [
        rml:source "../openrefine/2025-08-Agost-ITINERARIS-ITINERARIS-updated.csv";
        rml:referenceFormulation ql:CSV
    ] ;

    # 2. Sujeto (URI) - Usa las claves idTram y data para unicidad
    rr:subjectMap [
        rr:template "http://group08.linkeddata.es/resource/observation/Traffic-{idTram}-{data}";
        rr:class :Observation ;
        rr:class :TrafficSection ;
	rr:termType rr:IRI
    ] ;

    # 3. Propiedades de Dato (Mapeando los valores calculados)
    # Fecha/Hora (Columna ya transformada a ISO 8601)
    rr:predicateObjectMap [
        rr:predicate :hasObservationDateTime;
        rr:objectMap [ rml:reference "data"; rr:datatype xsd:dateTime ]
    ] ;
    # Tiempo Actual y Previsto
    rr:predicateObjectMap [
        rr:predicate :hasCurrentTravelTime;
        rr:objectMap [ rml:reference "tempsActual"; rr:datatype xsd:integer ]
    ] ;
    rr:predicateObjectMap [
        rr:predicate :hasPredictedTravelTime ;
        rr:objectMap [ rml:reference "tempsPrevist" ; rr:datatype xsd:integer ]
    ] ;

    # Factor de Congestión (Calculado, float)
    rr:predicateObjectMap [
        rr:predicate :hasCongestionFactor;
        rr:objectMap [ rml:reference "congestionIndex"; rr:datatype xsd:decimal ]
    ] ;
    # Estado de Tráfico (Texto/Literal: Congestion, Normal, etc.)
    rr:predicateObjectMap [
        rr:predicate :hasTrafficState;
        rr:objectMap [ rml:reference "congestion"; rr:datatype xsd:string ]
    ] ;
    # Tendencia de Tráfico (Texto/Literal: improving, worsening, etc.)
    rr:predicateObjectMap [
        rr:predicate :hasTrafficTendency;
        rr:objectMap [ rml:reference "tendencia"; rr:datatype xsd:string ]
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            rr:template "Traffic observation for section {idTram} on {data}";
            rr:datatype xsd:string
        ]
    ] .


### 2. Air quality
# Source: 2025-08-Agost-qualitat-aire-BCN-updated.csv

<#AirObservationMap> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "../openrefine/2025-08-Agost-qualitat-aire-BCN-updated.csv";
        rml:referenceFormulation ql:CSV
    ] ;

    # Sujeto (URI) - Usa ESTACIO, Contaminante y DATETIME (la columna fusionada)
    rr:subjectMap [
        rr:template "http://group08.linkeddata.es/resource/observation/Air-{ESTACIO}-{CODI_CONTAMINANT}-{DATETIME}";
        rr:class :AirQualityObservation ;
	rr:termType rr:IRI
    ] ;
    # Propiedades de Dato
    rr:predicateObjectMap [
        rr:predicate :hasObservationDateTime;
        rr:objectMap [ rml:reference "DATETIME"; rr:datatype xsd:dateTime ]
    ] ;
    rr:predicateObjectMap [
        rr:predicate :hasContaminantCode;
        rr:objectMap [ rml:reference "CODI_CONTAMINANT"; rr:datatype xsd:integer ]
    ] ;
    rr:predicateObjectMap [
        rr:predicate :hasContaminantValue;
        rr:objectMap [ rml:reference "VALUE"; rr:datatype xsd:decimal ] 
    ] ;
    # Propiedades de Objeto (Relaciona la observación con la Estación Estática)
    rr:predicateObjectMap [
        rr:predicate :locatedIn;
        rr:objectMap [
            rr:parentTriplesMap <#AirStationMap> ; 
            rr:joinCondition [
                rr:child "ESTACIO"; rr:parent "ESTACIO"
            ]
        ]
    ] ;
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [
            rr:template "Air observation at station {ESTACIO}, pollutant {CODI_CONTAMINANT}, {DATETIME}";
            rr:datatype xsd:string
        ]
    ] .

# Mapeo estático de Estaciones de Aire
<#AirStationMap> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "../openrefine/2025-08-Agost-qualitat-aire-BCN-updated.csv";
        rml:referenceFormulation ql:CSV
    ] ;
    # Sujeto (URI) - Solo usa ESTACIO para la entidad estática
    rr:subjectMap [
        rr:template "http://group08.linkeddata.es/resource/station/Air-{ESTACIO}";
        rr:class :Location ; 
        rr:termType rr:IRI;
    ] ;
    # Propiedades de Dato (ej: Mapear nombre del municipio)
    rr:predicateObjectMap [
        rr:predicate :hasMunicipality;
        rr:objectMap [ rml:reference "MUNICIPI"; rr:datatype xsd:string ]
    ] .


### 3. Bice parking
# Source: opendatabcn-transports-bicis-aparcaments-serveis-bicis-updated.csv

<#BikeParkingMap> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "../openrefine/opendatabcn-transports-bicis-aparcaments-serveis-bicis-updated.csv";
        rml:referenceFormulation ql:CSV
    ] ;

    # Sujeto (URI) - Usa register_id como clave única para agrupar todos los datos de contacto/servicio
    rr:subjectMap [
        rr:template "http://group08.linkeddata.es/resource/bikeParking/{register_id}";
        rr:class :BikeParking ;
	rr:termType rr:IRI
    ] ;

    # Propiedades de Dato (Mapeando los atributos y contactos)
    rr:predicateObjectMap [
        rr:predicate rdfs:label;
        rr:objectMap [ rml:reference "name"; rr:datatype xsd:string ]
    ] ;
    rr:predicateObjectMap [
        rr:predicate :hasZipCode;
        rr:objectMap [ rml:reference "addresses_zip_code"; rr:datatype xsd:integer ]
    ] ;
    # Contacto (values_value y values_attribute_name)
    rr:predicateObjectMap [
        rr:predicate :hasContactValue;
        rr:objectMap [ rml:reference "values_value"; rr:datatype xsd:string ]
    ] ;
    rr:predicateObjectMap [
        rr:predicate :hasContactType;
        rr:objectMap [ rml:reference "values_attribute_name"; rr:datatype xsd:string ]
    ] ;
    # Propiedad de Localización Administrativa (Municipio)
    rr:predicateObjectMap [
        rr:predicate :hasMunicipality;
        rr:objectMap [ rr:constant "Barcelona"; rr:datatype xsd:string ]
    ] ;
    # Propiedad de Localización Administrativa (Distrito)
    rr:predicateObjectMap [
        rr:predicate :hasDistrict;
        rr:objectMap [ rml:reference "addresses_district_name"; rr:datatype xsd:string ]
    ] ;
    # Coordenadas (geo:lat, geo:long)
    rr:predicateObjectMap [
        rr:predicate geo:lat;
        rr:objectMap [ rml:reference "geo_epgs_4326_lat"; rr:datatype xsd:decimal ]
    ] ;
    rr:predicateObjectMap [
        rr:predicate geo:long;
        rr:objectMap [ rml:reference "geo_epgs_4326_lon"; rr:datatype xsd:decimal ]
    ] .